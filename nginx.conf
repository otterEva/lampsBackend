worker_processes  auto;
events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    log_format  main  '$remote_addr - $remote_user [$time_local] '
                      '"$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent" '
                      '"Request_ID:$request_id"';

    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log   debug;

    upstream users_backend {
        server users_service:8080;
    }
    upstream orders_backend {
        server orders_service:8080;
    }
    upstream goods_backend {
        server goods_service:8080;
    }
    upstream image_backend {
        server image_service:8080;
    }
    # upstream front {
    #     server front:5173;
    # }

    server {
        listen       8080;
        server_name  _;

        ########################
        #   CORS для /auth    #
        ########################

        # 1) Обработка точного "/auth" (без завершающего "/")
        location = /auth {
            # Если предзапрос (OPTIONS) — возвращаем 204 и CORS-заголовки
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin  *;
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization, Origin, X-Requested-With, Content-Type, Accept";
                return 204;
            }

            # Все остальные методы (POST, GET и т.д.) проксируем на бэкенд
            proxy_pass         http://users_backend/auth;
            proxy_http_version 1.1;
            proxy_set_header   Host              $host;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;

            # Добавляем CORS-заголовок для ответа
            add_header Access-Control-Allow-Origin  *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        }

        # 2) Обработка всех путей, начинающихся на "/auth/"
        location /auth/ {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin  *;
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization, Origin, X-Requested-With, Content-Type, Accept";
                return 204;
            }

            proxy_pass         http://users_backend/auth/;
            proxy_http_version 1.1;
            proxy_set_header   Host              $host;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;

            add_header Access-Control-Allow-Origin  *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        }

        ########################
        #  CORS для /goods    #
        ########################

        location = /goods {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin  *;
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization, Origin, X-Requested-With, Content-Type, Accept";
                return 204;
            }

            proxy_pass         http://goods_backend/goods;
            proxy_http_version 1.1;
            proxy_set_header   Host              $host;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;

            add_header Access-Control-Allow-Origin  *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        }

        location /goods/ {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin  *;
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization, Origin, X-Requested-With, Content-Type, Accept";
                return 204;
            }

            proxy_pass         http://goods_backend/goods/;
            proxy_http_version 1.1;
            proxy_set_header   Host              $host;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;

            add_header Access-Control-Allow-Origin  *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        }

        ########################
        #  CORS для /orders   #
        ########################

        location = /orders {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin  *;
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization, Origin, X-Requested-With, Content-Type, Accept";
                return 204;
            }

            proxy_pass         http://orders_backend/orders;
            proxy_http_version 1.1;
            proxy_set_header   Host              $host;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;

            add_header Access-Control-Allow-Origin  *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        }

        location /orders/ {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin  *;
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization, Origin, X-Requested-With, Content-Type, Accept";
                return 204;
            }

            proxy_pass         http://orders_backend/orders/;
            proxy_http_version 1.1;
            proxy_set_header   Host              $host;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;

            add_header Access-Control-Allow-Origin  *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        }

        ########################
        # CORS для /images    #
        ########################

        location = /images {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin  *;
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization, Origin, X-Requested-With, Content-Type, Accept";
                return 204;
            }

            proxy_pass         http://image_backend/images;
            proxy_http_version 1.1;
            proxy_set_header   Host              $host;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;

            add_header Access-Control-Allow-Origin  *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        }

        location /images/ {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin  *;
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization, Origin, X-Requested-With, Content-Type, Accept";
                return 204;
            }

            proxy_pass         http://image_backend/images/;
            proxy_http_version 1.1;
            proxy_set_header   Host              $host;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;

            add_header Access-Control-Allow-Origin  *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        }

        # location = /front {
        #     # Ответ на preflight-запрос (OPTIONS)
        #     if ($request_method = OPTIONS) {
        #         add_header Access-Control-Allow-Origin  *;
        #         add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        #         add_header Access-Control-Allow-Headers "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        #         return 204;
        #     }

        #     # Вся остальная логика (GET, POST и т. д.)
        #     proxy_pass         http://front/;
        #     proxy_http_version 1.1;
        #     proxy_set_header   Host              $host;
        #     proxy_set_header   X-Real-IP         $remote_addr;
        #     proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        #     proxy_set_header   X-Forwarded-Proto $scheme;

        #     add_header Access-Control-Allow-Origin  *;
        #     add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        #     add_header Access-Control-Allow-Headers "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        # }

        # Любые запросы, начинающиеся на /front/, включая /front/..., /front/@vite/client и т.п.
        # location ^~ /front/ {
        #     if ($request_method = OPTIONS) {
        #         add_header Access-Control-Allow-Origin  *;
        #         add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        #         add_header Access-Control-Allow-Headers "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        #         return 204;
        #     }
        #     # Перенаправляем всё на Vite-сервер (порт 5173) без дополнительного суффикса
        #     proxy_pass         http://front/;
        #     proxy_http_version 1.1;
        #     proxy_set_header   Host              $host;
        #     proxy_set_header   X-Real-IP         $remote_addr;
        #     proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        #     proxy_set_header   X-Forwarded-Proto $scheme;

        #     add_header Access-Control-Allow-Origin  *;
        #     add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        #     add_header Access-Control-Allow-Headers "Authorization, Origin, X-Requested-With, Content-Type, Accept";
        # }
    }
}
