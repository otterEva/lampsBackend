version: "3.8"

services:
  users_db:
    image: postgres:15
    container_name: UsersDB
    restart: always
    environment:
      POSTGRES_DB: users
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1337
    volumes:
      - postgres_data_users:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  users_service:
    build: ./users_service
    container_name: users_service
    depends_on:
      - users_db
    environment:
      DB_DSN: postgres://postgres:1337@users_db:5432/users?sslmode=disable
      SECRET: SUPER-SECRET-KEY
      APP_URL: 0.0.0.0:8080
    ports:
      - "8081:8080"

  # ------------------------------------------------------------------
  orders_db:
    image: postgres:15
    container_name: OrdersDB
    restart: always
    environment:
      POSTGRES_DB: orders
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1337
    volumes:
      - postgres_data_orders:/var/lib/postgresql/data
    ports:
      - "5434:5432"

  orders_service:
    build: ./orders_service
    container_name: orders_service
    depends_on:
      - orders_db
    environment:
      DB_DSN: postgres://postgres:1337@orders_db:5432/orders?sslmode=disable
      SECRET: SUPER-SECRET-KEY
      APP_URL: 0.0.0.0:8080
    ports:
      - "8082:8080"

  # ------------------------------------------------------------------

  goods_db:
    image: postgres:15
    container_name: GoodsDB
    restart: always
    environment:
      POSTGRES_DB: goods
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1337
    volumes:
      - postgres_data_goods:/var/lib/postgresql/data
    ports:
      - "5435:5432"

  goods_service:
    build: ./goods_service
    container_name: goods_service
    depends_on:
      - goods_db
    environment:
      DB_DSN: postgres://postgres:1337@goods_db:5432/goods?sslmode=disable
      SECRET: SUPER-SECRET-KEY
      APP_URL: 0.0.0.0:8080
    ports:
      - "8083:8080"

  # ------------------------------------------------------------------

  image_service:
    build: ./image_service
    container_name: image_service
    depends_on:
      - minio
    environment:
      SECRET: SUPER-SECRET-KEY
      APP_URL: 0.0.0.0:8080
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET: bucket
      MINIO_URL: minio:9000
    ports:
      - "8084:8080"

  minio:
    container_name: minio
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # ------------------------------------------------------------------

  # front:
  #   build: ./front
  #   container_name: front
  #   ports:
  #     - "5173:5173"

  # # ------------------------------------------------------------------
  nginx:
    image: nginx:latest
    container_name: nginx
    depends_on:
      - users_service
      - orders_service
      - goods_service
      - image_service
    ports:
      - "80:8080"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped

volumes:
  postgres_data_orders:
  postgres_data_users:
  postgres_data_goods:
  minio_data:
